@model X.PagedList.IPagedList<UCE_TEST.Models.Employee>
@using X.PagedList.Mvc.Core;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Crear Nuevo</a>
</p>

@using (Html.BeginForm("Index", "Employees", FormMethod.Get))
{
    <p>
        Filtro General: @Html.TextBox("SearchString")
        <input type="submit" class="btn btn-success mb-1" value="Buscar" />
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Photo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Position)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().BirthDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DateOfHire)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().MaritalStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().IsActive)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        string employeePhoto = null;
                        if (item.Photo is not null)
                        {
                            string imgBase64Data = Convert.ToBase64String(item.Photo);
                            employeePhoto = string.Format("data:image/png;base64,{0}", imgBase64Data);
                        }
                    }
                    <img src="@employeePhoto" class="img-fluid">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @{ var birthday = item.BirthDay.ToString("dd/MM/yyyy"); }
                    @Html.DisplayFor(modelItem => birthday)
                </td>
                <td>
                    @{ var dateOfHire = item.DateOfHire.ToString("dd/MM/yyyy"); }
                    @Html.DisplayFor(modelItem => dateOfHire)
                </td>
                <td>
                    @{
                        var employeePhone = $"{item.Phone[0..3]}-{item.Phone[3..6]}-{item.Phone[6..]}";
                    }
                    @Html.DisplayFor(modelItem => employeePhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaritalStatus)
                </td>
                <td>
                    @{ var state = item.IsActive is true ? "Activo" : "Desvinculado"; }
                    @Html.DisplayFor(modelItem => state)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Desvincular</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }))